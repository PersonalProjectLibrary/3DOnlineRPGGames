
一、封装PENet的PETool工具
使即使没有引用PENet的类里也能使用；使用时不需要引用PENet，减少使用的繁琐麻烦
而且这个工程项目都是使用统一的日志打印，后面也方便对日志分析之类的处理；

1、打开服务端工程，在PEProtocol协议工程里，新建类：PECommon，客户端和服务端共用工具类
放在PEProtocol是为了保证，脚本存在导出的dll里，使服务端和客户端都能使用；

2、设置PECommon
（1）PECommon类去除命名空间，设置为public类；
（2）PECommon文件里添加消息等级的枚举LogType，和PESocket里消息的等级是一一对应的；
（3）PECommon类里添加日志打印的静态方法Log，作为外部使用的封装PETool方法的日志打印工具；

3、更新替换
将整个Server项目的PETool.LogMsg都替换为PECommon.Log
重新生成更新PEProtocol
将整个Client项目的Debug.Log都替换为PECommon.Log
注客户端的NetService里，Unity打印服务器日志的Log，还是用Debug的，不用改成PECommon的（实际是PETool的）

4、运行服务端和客户端，可以看到服务器和客户端的日志输出，前面都有添加对应的输出事件；