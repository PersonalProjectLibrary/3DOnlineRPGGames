
一、任务奖励系统
1、记录在游戏过程中某一些任务的进度，如：
记录参加副本战斗次数，参加满三次副本战斗，可以领取奖励；不满三次，奖励是灰色状态；
这里定义6个任务
2、任务奖励系统的UI界面主要使用一个滑动列表；
3、第一个重点：滑动列表里任务进度的计算；
主要是在服务器上进行逻辑的处理，涉及到多个系统之间的数据交换和运算；
在任务完成后，数据推送到客户端里，然后玩家就可以去领取任务；
4、领取完的任务放到列表最后面，没有领取的排在列表前面；
5、任务的奖励主要是金币和经验；

二、副本业务系统
副本界面，也就是战斗入口，定义常规的UI逻辑；
后面从主城系统里，拆分出一个系统，对副本系统做单独的处理；

三、搭建任务奖励系统的UI界面
1、之前制作强化界面时，已经初步制作过任务奖励界面
2、场景里的TaskWnd，并放到Resources/PrefabUI文件夹里制作成预制体
3、注意TaskWnd也应该放到DynamicWnd的上面

四、制作显示在任务奖励界面上的任务条目对象ItemTask
1、同时这里也把后面副本里使用的角色血条对象ItemEntityHp制作出来，
2、并和ItemTask都放到Resources/PrefabUI文件夹里制作成预制体
3、单独制作任务条目的原因：
（1）在滑动任务列表里，有很多个任务，当某个小任务完成一个进度后需要进行更新；
有的奖励领取了有的奖励没有领取，任务的数据会随时发生变化；
（2）所以不能直接在任务面板里制作固定的任务条目，需要在任务列表里进行动态生成任务条目；
（3）我们这里制作单独的一个任务条目作为模板，使用代码进行动态的加载，指定条目里的数据；

五、制作任务奖励界面里的滑动任务列表
（1）TaskWnd/MainContent下添加Scroll View对象作为滑动任务列表；
（2）Scroll View身上的ScrollRect组件，Horizontal选项取消勾选，Vertical选项保持勾选状态；
使添加到到任务面板上的任务条目，只能上下拖动，不能左右拖动；
（3）在Scroll View里的Content身上添加VerticalLayoutGroup布局组件，
可以根据需求设置组件里的参数，
使添加到任务面板上的任务条目在滑动任务面板竖直方向上按顺序进行自动排布
同样的根据需求，也有HorizontalLayoutGroup和GridLayoutGroup组件设置水平和网格方向布局；
（4）在Content身上添加ContentSizeFitter组件，
并设置VerticalFit为PreferredSize；HorizontalFit为Unconstrained；
这样运行滑动任务列表时，可以自然正常的滑动任务条目；

六、控制使用任务奖励界面
1、新建任务奖励界面控制脚本TaskWnd.cs
在Scripts/UIWindow文件夹里新建TaskWnd.cs脚本，并挂到场景的TaskWnd物体身上
2、设置任务奖励窗口的打开与关闭
（1）初始化TaskWnd.cs，继承WindowRoot，添加InitWnd()方法，
（2）在TaskWnd.cs添加ClickCloseBtn()关闭窗口函数
（3）在MainCitySystem.cs主城系统里添加引用，以及打开任务奖励窗口的函数OpenTaskWnd()
（4）在MainCityWnd.cs里添加打开任务奖励界面的点击事件函数ClickTaskBtn()
（5）对场景MainCityWnd里的btnTask按钮，和任务奖励界面里的btnClose按钮进行事件绑定

七、运行测试
点击主城界面的任务奖励图标，打开任务奖励界面