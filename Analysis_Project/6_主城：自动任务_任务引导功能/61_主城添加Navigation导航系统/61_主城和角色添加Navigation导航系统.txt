
一、打开Navigation窗口
菜单栏--Window--Navigation点击打开；

二、烘焙一个可以去导航的网格
烘焙网格，要有一个碰撞的环境，
这里使用之前添加使用的Collider_Floor和Collider_Wall碰撞环境来生成一个导航网格
注：制作网格是基于多边形来计算的，不能使用特别复杂的模型当作为导航网格的计算，
否则会使NaviMesh特别特别复杂，非常不利于导航；

1、关闭SceneMainCity场景里的所有物体
2、显示MainCity里的两个Collider，并打开Collider里Cube身上的Mesh组件

注意两个Collider包括其子物体在Inspector窗口里的属性，都是勾选上 Static 状态的

3、Navigation窗口里的Agents、Areas、Object保持默认状态即可
Aents角色：定义导航的角色一些相关的数据，如半径高度定义角色爬坡的程度
Areas区域：定义什么地方可以走，什么地方不能走，什么地方可以跳；
Object对象：对场景里对象的一个过滤，保持默认就好，此时场景里其他物体已经关闭了；

4、烘焙导航网格
（1）选中Navigation里的Bake选项
（2）点击Clear按钮，再点击Bake按钮
然后可以看到场景里多了蓝色网路，就是生成的可导航网格；
（3）如果有问题，可以点Clear进行清除，再点Bake重新生成；
因为当前环境比较简单，这里生成网格就会比较快

5、查看导航网格
（1）关闭场景所有物体，包括前面打开的Collider
（2）点击Navigation窗口，可看到场景里显示蓝色导航网格

三、还原场景设置
1、显示场景里的两个Collider，并将其内部子物体Cube身上的Mesh组件取消勾选，进行关闭

2、将场景里所有对象激活显示

3、点击Navigation窗口，可看到场景里显示导航路网

四、使用Navigation导航网格
1、场景里拖入主角预制体，主角预制体身上添加NavMeshAgent组件
2、默认关闭角色身上的NavMeshAgent组件，
角色身上的NavMeshAgent组件是控制角色自动导航移动的；
角色身上的PlayerController组件是玩家控制角色移动的，都打开会有冲突；
这里默认关闭NavMeshAgent组件；
后面代码控制：
什么时候关闭PlayerController组件，激活NavMeshAgent组件；
什么时候关闭NavMeshAgent组件，激活PlayerController组件；

3、角色身上的NavMeshAgent组件里的参数，大部分保持默认即可
这里将角色选择的角速度调大，调为360
这样可以是角色在进行自动导航时，显示移动更快一点，体验会更好；

4、对角色预制体进行保存，GameRoot里的角色就可以删除；

后续使用代码实现控制角色的导航功能













