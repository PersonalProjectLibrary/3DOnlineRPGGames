
一、VS环境配置
单纯的Unity开发，所需要的VS模块是：
1、VS核心编辑器，
2、使用Unity的游戏开发：Visual Studio Tools for Unity、C# 和 Visual Basic
3、单个组件：实时调试器、Visual Studio C++核心

服务器是控制台工程，控制台属于.Net桌面开发，所需要的VS模块是：
.Net 桌面开发

其他的不需要就暂时不安装了；

注：
1、VS重装的话，记得根据之前设置脚本头部注释的方法，
将VS里class模板替换为带有头部注释是脚本模板。
仓库的GamePlugins文件夹里有存放脚本模板替换文件和使用说明；

考虑到VS新建C#工程，不一定有Unity支持开发，这里对脚本模板进行了更新，
删除了模板里使用Unity库的引用。

2、这里服务器是运行在Windows上的，使用.Net 桌面开发；
如果服务器是要放在Linux上，则还需要安装 .Net Core跨平台开发 这个模块；

相关过程，可查看"VS开发环境配置"文件夹里的截图说明；

***********************************************************************************************

二、网络通信
1、网络通信是一个难点，网络通信的过程是非常复杂的；
尤其是高并发的网络通信，即同时负载很多客户端的服务器；

2、网络是一种通用技术，比如在当前的游戏项目里，网络通信和具体的游戏逻辑是没有关系的。
我们可以把网络通信独立出来。在完成这个项目后，网络通信的模块还可以再移到其他项目中去；
其他的项目也可以使用相同的网络技术；

所以，本项目中，并不会去实现一个底层的网络通信框架，
而是直接使用一个现成的网络技术，PESocket网络库；

三、PESocket网络库
获取地址：https://github.com/PlaneZhong/PESocket
教程说明：https://www.cnblogs.com/planezhong/p/10074676.html

PESocket网络库工程，这里打包为PESocket-2.0.zip文件，放在文件夹里；
其中PESocket-1.0.zip为早期未修改更新的PESocket网络库工程；

在PESocket文件夹中，
1、PESocket文件是纯网络库的主工程文件；
打开文件，点击解决方案PESocket.sln，可查看网络库脚本内容；

2、Example文件是示例文件；
可查看使用，怎么使用网络库进行客户端和服务端信息通信；
（1）UnityClient是Unity工程，用Unity打开作为客户端，向服务器发送信息
（2）ConsoleProjects是控制台工程，点击ConsoleProjects.sln打开工程；
打开工程的解决方案里可以看到四个项目：
1）PESocket是主工程，是引用过来的PESocket网络库；
2）Protocol是网络协议工程；
2）ConsoleServer是控制台服务器工程
3）ConsoleClient是控制台客户端工程

***********************************************************************************************

四、PESocket网络库使用演示操作
这里将  控制台的项目框架都更新为.Net Framework 4.8版本；
Unity工程也更新为2021.3.39版本；

1、打开控制台工程：
点击PESocket/Example/ConsoleProjects里的ConsoleProjects.sln，使用VS打开
2、运行控制台服务器
选中解决方案里的ConsoleServer工程，右键--调试--启动新实例；

运行报错：
可能由于打开工程时，项目更新导致版本框架发生改变、不同项目的框架不一致等情况，
导致无法正常启动运行项目；

解决方法：
这里选择解决方案里 控制台的项目，右键--属性--应用程序，设置目标框架；
将几个工程设置为统一的目标框架；

然后再重新调试运行，就可以正常打开服务器；

3、运行控制台客户端
选中解决方案里的ConsoleClient工程，右键--调试--启动新实例；

4、客户端和服务端发送信息
在打开的ConsoleClient客户端窗口中，输入信息，按回车/enter键确认发送；
可在打开的ConsoleServer服务端窗口中看到，接收到的客户端发过来的消息；
并且可以看到ConsoleClient客户端窗口中收到服务端返回的回复信息；

支持多个客户端向服务端发送信息、请求；

5、Unity客户端和服务端交互
打开PESocket/Example/UnityProjects里的UnityClient工程，点击运行；
可以在打开的ConsoleServer服务端窗口中看到，显示Client Online 客户端开启上线的提示信息；

相关过程，可查看"PESocket示例使用"文件夹里的截图说明；


























